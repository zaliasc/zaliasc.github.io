<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>tree - Tag - zaliasc's Blog</title><link>http://example.org/tags/tree/</link><description>tree - Tag - zaliasc's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>zaliasc@gmail.com (zaliasc)</managingEditor><webMaster>zaliasc@gmail.com (zaliasc)</webMaster><lastBuildDate>Sun, 29 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://example.org/tags/tree/" rel="self" type="application/rss+xml"/><item><title>二叉树遍历</title><link>http://example.org/posts/%E4%BA%8C%E5%8F%89%E6%A0%91/</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><author>zaliasc</author><guid>http://example.org/posts/%E4%BA%8C%E5%8F%89%E6%A0%91/</guid><description><![CDATA[前序遍历 void preorder(Node * head){ if(head!=null) { cout &lt;&lt; head -&gt; val; preorder(head-&gt;left); preorder(head-&gt;right); } } void preorder(Node * head){ if(!head) return ; stack&lt;Node *&gt; s; s.push(head); while(!s.empty()){ Node * tmp = s.top(); s.pop(); cout &lt;&lt; tmp.val; if(tmp-&gt;left) s.push(tmp-&gt;left); if(tmp-&gt;right) s.push(tmp-&gt;right); } } 中序遍历 void inorder(Node * head){ if(head!=null) { inorder(head-&gt;left); cout &lt;&lt; head -&gt; val; inorder(head-&gt;right); } } void inorder(Node * he]]></description></item></channel></rss>